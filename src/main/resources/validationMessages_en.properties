jakarta.validation.constraints.AssertFalse.message=Must be false
jakarta.validation.constraints.AssertTrue.message=Must be true
jakarta.validation.constraints.DecimalMax.message=Price must be ${inclusive == true ? 'equal or ' : ''}less than {value}
jakarta.validation.constraints.DecimalMin.message=Price must be ${inclusive == true ? 'equal or ' : ''}greater than {value}
jakarta.validation.constraints.Digits.message=Numeric value out of bounds (expected <integer digits: {integer}>,<fractional digits: {fraction}>)
jakarta.validation.constraints.Email.message=Invalid email address format
jakarta.validation.constraints.Future.message=Must be a future date
jakarta.validation.constraints.FutureOrPresent.message=Must be a current or future date
jakarta.validation.constraints.Max.message=Value must be equal to or less than {value}.
jakarta.validation.constraints.Min.message=Value must be equal to or greater than {value}.
jakarta.validation.constraints.Negative.message=Must be less than 0
jakarta.validation.constraints.NegativeOrZero.message=Must be equal to or less than 0
jakarta.validation.constraints.NotBlank.message=Field cannot be blank
jakarta.validation.constraints.NotEmpty.message=Field cannot be empty
jakarta.validation.constraints.NotNull.message=Field cannot be null
jakarta.validation.constraints.LimitTranslationsLength.message=Maximum length is 255 letters.
jakarta.validation.constraints.Null.message=Must be null
jakarta.validation.constraints.Past.message=Must be a past date
jakarta.validation.constraints.PastOrPresent.message=Must be a current or past date
jakarta.validation.constraints.Pattern.message=Invalid format
jakarta.validation.constraints.Positive.message=Must be greater than 0
jakarta.validation.constraints.PositiveOrZero.message=Must be equal to or greater than 0
jakarta.validation.constraints.Size.message=Size must be between {min} and {max}
jakarta.validation.constraints.Password.message=Password must contain at least one uppercase letter, one lowercase letter, one digit, and one special character
jakarta.validation.constraints.Pin.message=Pin must contain 4 digits
jakarta.validation.constraints.ForenameSurname.message=Field should contain minimum 2 letters and no special characters
org.hibernate.validator.constraints.CreditCardNumber.message=Invalid credit card number
org.hibernate.validator.constraints.Currency.message=Invalid currency (must be one of the following: {value})
org.hibernate.validator.constraints.EAN.message=Invalid barcode {type}
org.hibernate.validator.constraints.Email.message=Must be a correctly formatted email address
org.hibernate.validator.constraints.ISBN.message=Invalid ISBN number
org.hibernate.validator.constraints.Length.message=Length must be between {min} and {max}.
org.hibernate.validator.constraints.CodePointLength.message=Length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message=The check digit for value ${validatedValue} is incorrect, Luhn Modulo 10 algorithm check failed
org.hibernate.validator.constraints.Mod10Check.message=The check digit for value ${validatedValue} is incorrect, Modulo 10 algorithm check failed
org.hibernate.validator.constraints.Mod11Check.message=The check digit for value ${validatedValue} is incorrect, Modulo 11 algorithm check failed
org.hibernate.validator.constraints.ModCheck.message=The check digit for value ${validatedValue} is incorrect, {modType} algorithm check failed
org.hibernate.validator.constraints.NotBlank.message=Cannot be whitespace
org.hibernate.validator.constraints.NotEmpty.message=Cannot be empty
org.hibernate.validator.constraints.ParametersScriptAssert.message=Script expression evaluation {script} did not return true
org.hibernate.validator.constraints.Range.message=Must be within the range from {min} to {max}
org.hibernate.validator.constraints.ScriptAssert.message=Script expression evaluation {script} did not return true
org.hibernate.validator.constraints.UniqueElements.message=Must contain only unique elements
org.hibernate.validator.constraints.URL.message=Must be a valid URL
org.hibernate.validator.constraints.UUID.message=Must be a valid UUID
org.hibernate.validator.constraints.br.CNPJ.message=Invalid Brazilian legal entity tax registration number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message=Invalid Brazilian individual tax registration number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message=Invalid Brazilian voter ID number
org.hibernate.validator.constraints.pl.REGON.message=Invalid Polish taxpayer identification number (REGON)
org.hibernate.validator.constraints.pl.NIP.message=Invalid VAT identification number (NIP)
org.hibernate.validator.constraints.pl.PESEL.message=Invalid Polish national identification number (PESEL)
org.hibernate.validator.constraints.ru.INN.message=Invalid Russian taxpayer identification number (INN)
org.hibernate.validator.constraints.time.DurationMax.message=Must be ${inclusive == true ? 'equal or ' : ''}shorter than${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' min'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' s'}${millis == 0 ? '' : millis == 1 ? ' 1 millisecond' : ' ' += millis += ' ms'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosecond' : ' ' += nanos += ' ns'}
org.hibernate.validator.constraints.time.DurationMin.message=Must be ${inclusive == true ? 'equal or ' : ''}longer than${days == 0 ? '' : days == 1 ? ' 1 day' : ' ' += days += ' days'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += ' hours'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' min'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' s'}${millis == 0 ? '' : millis == 1 ? ' 1 millisecond' : ' ' += millis += ' ms'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nanosecond' : ' ' += nanos += ' ns'}